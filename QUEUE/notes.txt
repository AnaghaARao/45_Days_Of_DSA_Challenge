Queue:
-Abstract data type
-FIFO
-Put restrictions on entry and removal of data

-Functions:
1. Enqueue(int ele)
2. front(): to access the 1st ele
3. dequeue(): to delete
4. size(): to find size of the Queue
5. isEmpty(): to check if the queue is isEmpty

-Implementations:
1. using array:
    IMPLEMENTATION  OF CIRCULAR QUEUE USING ARRAYS: 
    Implementation factors:
    Data members:
    1. Array- to store values
    2. front(firstIndex) - ptr to the first element/ deletion element
    3. rear(nextIndex) - ptr to insertion index
    4. capacity - to store capacity of array
    5. n - size of the array at any instance

    Data functions:
    1. enqueue(T ele): to enter elements into the array...
                       in case capacity is full then the 
                       array is updated to have 2 times the 
                       original number of elements
    2. dequeue(): similar to pop=> removes the 1st element inserted
    3. front(): similar to top=> returns the 1st ele...doesnt delete it
    4. size(): returns the current size of the queue
    5. isEmpty(): returns boolean value indicating whether 
                  the queue is empty or not


2. using linkedlist:
    IMPLEMENTAION OF QUEUE USING LINKEDLIST:
    Class members:
    1. head node: to delete the 1st element => front
    2. size: tracks the size of queue
    3. tail node: to insert the elements => rear

    Class functions:
    1. enqueue(T ele): create a new node and insert
    2. dequeue(): removes the 1st element
    3. front(): returns the front ndal value
    4. isEmpty(): checks if queue is empty
    5. size(): return the size of the queue